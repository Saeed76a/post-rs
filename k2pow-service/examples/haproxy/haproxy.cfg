peers mypeers
    peer haproxy1 127.0.0.1:10000

global
    log /dev/log    local0
    log /dev/log    local1 debug
    stats timeout 30s

defaults
    mode http

    log global

    option httplog
    option http-server-close
    option forwardfor

    timeout connect 3s
    timeout client  50s
    timeout server  50s

frontend ft_peers
    bind 127.0.0.1:10000
    default_backend bk_peers

backend bk_peers
    mode tcp
    balance roundrobin
    server local 127.0.0.1:10000 LocalAddrProto 127.0.0.1:10000

frontend http_in
    # this is the port where the Load Balancer will be accessible
    bind *:3333
    default_backend servers


backend servers
    balance roundrobin
    option httpchk
    option redispatch

    # Use consistent hashing to remember the server selection based on part of the URI.
    hash-type consistent

    # This defines a sticky table with 30m expire time, so make sure that k2pow for given group can be done under that time
    # otherwise set it to a higher value.
    stick-table type string len 64 size 10k expire 30m store server_id

    # Extract the URI part we want for hashing and make it lower-case for consistency.
    acl uri_parts path_reg ^/job/([^/]+)/([^/]+)
    http-request set-var(txn.uri_path) path,lower if uri_parts

    # Hash the extracted path and store it in the stick table.
    stick on path,lower

    # Retry configuration
    # set it to AT least number of your k2pow services
    retries 4
    # this is supported on haproxy 3.0.4+
    retry-on 429 503 response-timeout conn-failure

    # Define the k2pow services, one per line
    # remember to keep name and IP:PORT unique
    server k2pow1 10.0.0.1:3000
    server k2pow2 10.0.0.2:3000
    server k2pow2 10.0.0.3:3000
